--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1 (Debian 15.1-1.pgdg110+1)
-- Dumped by pg_dump version 15.1 (Ubuntu 15.1-1.pgdg22.10+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: hdb_catalog; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA hdb_catalog;


ALTER SCHEMA hdb_catalog OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: gen_hasura_uuid(); Type: FUNCTION; Schema: hdb_catalog; Owner: postgres
--

CREATE FUNCTION hdb_catalog.gen_hasura_uuid() RETURNS uuid
    LANGUAGE sql
    AS $$select gen_random_uuid()$$;


ALTER FUNCTION hdb_catalog.gen_hasura_uuid() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: hdb_action_log; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_action_log (
    id uuid DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    action_name text,
    input_payload jsonb NOT NULL,
    request_headers jsonb NOT NULL,
    session_variables jsonb NOT NULL,
    response_payload jsonb,
    errors jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    response_received_at timestamp with time zone,
    status text NOT NULL,
    CONSTRAINT hdb_action_log_status_check CHECK ((status = ANY (ARRAY['created'::text, 'processing'::text, 'completed'::text, 'error'::text])))
);


ALTER TABLE hdb_catalog.hdb_action_log OWNER TO postgres;

--
-- Name: hdb_cron_event_invocation_logs; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_cron_event_invocation_logs (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    event_id text,
    status integer,
    request json,
    response json,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE hdb_catalog.hdb_cron_event_invocation_logs OWNER TO postgres;

--
-- Name: hdb_cron_events; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_cron_events (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    trigger_name text NOT NULL,
    scheduled_time timestamp with time zone NOT NULL,
    status text DEFAULT 'scheduled'::text NOT NULL,
    tries integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    next_retry_at timestamp with time zone,
    CONSTRAINT valid_status CHECK ((status = ANY (ARRAY['scheduled'::text, 'locked'::text, 'delivered'::text, 'error'::text, 'dead'::text])))
);


ALTER TABLE hdb_catalog.hdb_cron_events OWNER TO postgres;

--
-- Name: hdb_metadata; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_metadata (
    id integer NOT NULL,
    metadata json NOT NULL,
    resource_version integer DEFAULT 1 NOT NULL
);


ALTER TABLE hdb_catalog.hdb_metadata OWNER TO postgres;

--
-- Name: hdb_scheduled_event_invocation_logs; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_scheduled_event_invocation_logs (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    event_id text,
    status integer,
    request json,
    response json,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE hdb_catalog.hdb_scheduled_event_invocation_logs OWNER TO postgres;

--
-- Name: hdb_scheduled_events; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_scheduled_events (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    webhook_conf json NOT NULL,
    scheduled_time timestamp with time zone NOT NULL,
    retry_conf json,
    payload json,
    header_conf json,
    status text DEFAULT 'scheduled'::text NOT NULL,
    tries integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    next_retry_at timestamp with time zone,
    comment text,
    CONSTRAINT valid_status CHECK ((status = ANY (ARRAY['scheduled'::text, 'locked'::text, 'delivered'::text, 'error'::text, 'dead'::text])))
);


ALTER TABLE hdb_catalog.hdb_scheduled_events OWNER TO postgres;

--
-- Name: hdb_schema_notifications; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_schema_notifications (
    id integer NOT NULL,
    notification json NOT NULL,
    resource_version integer DEFAULT 1 NOT NULL,
    instance_id uuid NOT NULL,
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT hdb_schema_notifications_id_check CHECK ((id = 1))
);


ALTER TABLE hdb_catalog.hdb_schema_notifications OWNER TO postgres;

--
-- Name: hdb_version; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_version (
    hasura_uuid uuid DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    version text NOT NULL,
    upgraded_on timestamp with time zone NOT NULL,
    cli_state jsonb DEFAULT '{}'::jsonb NOT NULL,
    console_state jsonb DEFAULT '{}'::jsonb NOT NULL
);


ALTER TABLE hdb_catalog.hdb_version OWNER TO postgres;

--
-- Name: chat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chat (
    avatar_group character varying(50),
    name_group character varying(30),
    user_typing character varying(50),
    chat_type integer,
    chat_id integer NOT NULL,
    created_at bigint DEFAULT 0 NOT NULL,
    chat_status integer NOT NULL
);


ALTER TABLE public.chat OWNER TO postgres;

--
-- Name: chat_chat_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.chat_chat_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.chat_chat_id_seq OWNER TO postgres;

--
-- Name: chat_chat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.chat_chat_id_seq OWNED BY public.chat.chat_id;


--
-- Name: chat_lines; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chat_lines (
    chat_id integer NOT NULL,
    message_type integer NOT NULL,
    message_text character varying(50000) NOT NULL,
    answer_line integer,
    file_type character varying(10),
    file_path character varying(50),
    file_name character varying(50),
    created_at bigint DEFAULT 0 NOT NULL,
    id integer NOT NULL,
    user_id integer NOT NULL,
    message_status integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.chat_lines OWNER TO postgres;

--
-- Name: chat_lines_line_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.chat_lines_line_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.chat_lines_line_id_seq OWNER TO postgres;

--
-- Name: chat_lines_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.chat_lines_line_id_seq OWNED BY public.chat_lines.id;


--
-- Name: user_chat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_chat (
    chat_id integer,
    instance_id integer NOT NULL,
    user_id integer,
    latest_message bigint DEFAULT 0 NOT NULL
);


ALTER TABLE public.user_chat OWNER TO postgres;

--
-- Name: user_chat_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.user_chat_instance_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_chat_instance_id_seq OWNER TO postgres;

--
-- Name: user_chat_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.user_chat_instance_id_seq OWNED BY public.user_chat.instance_id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    fire_id character varying(100) NOT NULL,
    eco_id integer NOT NULL,
    nickname character varying(50),
    is_connected boolean NOT NULL,
    last_seen integer NOT NULL,
    created_at integer NOT NULL,
    bio character varying,
    deleted_at integer
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: chat chat_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat ALTER COLUMN chat_id SET DEFAULT nextval('public.chat_chat_id_seq'::regclass);


--
-- Name: chat_lines id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_lines ALTER COLUMN id SET DEFAULT nextval('public.chat_lines_line_id_seq'::regclass);


--
-- Name: user_chat instance_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_chat ALTER COLUMN instance_id SET DEFAULT nextval('public.user_chat_instance_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Data for Name: hdb_action_log; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_action_log (id, action_name, input_payload, request_headers, session_variables, response_payload, errors, created_at, response_received_at, status) FROM stdin;
\.


--
-- Data for Name: hdb_cron_event_invocation_logs; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_cron_event_invocation_logs (id, event_id, status, request, response, created_at) FROM stdin;
\.


--
-- Data for Name: hdb_cron_events; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_cron_events (id, trigger_name, scheduled_time, status, tries, created_at, next_retry_at) FROM stdin;
\.


--
-- Data for Name: hdb_metadata; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_metadata (id, metadata, resource_version) FROM stdin;
1	{"sources":[],"version":3}	1
\.


--
-- Data for Name: hdb_scheduled_event_invocation_logs; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_scheduled_event_invocation_logs (id, event_id, status, request, response, created_at) FROM stdin;
\.


--
-- Data for Name: hdb_scheduled_events; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_scheduled_events (id, webhook_conf, scheduled_time, retry_conf, payload, header_conf, status, tries, created_at, next_retry_at, comment) FROM stdin;
\.


--
-- Data for Name: hdb_schema_notifications; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_schema_notifications (id, notification, resource_version, instance_id, updated_at) FROM stdin;
1	{"metadata":true,"remote_schemas":[],"sources":["dbchat"]}	47	37f47ad5-9f17-4cbf-b9ef-74b1c19695d0	2022-02-18 10:47:54.533116+00
\.


--
-- Data for Name: hdb_version; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_version (hasura_uuid, version, upgraded_on, cli_state, console_state) FROM stdin;
9176e1ce-7da2-4f06-b485-20c1bc128ebf	47	2022-11-17 13:50:34.737028+00	{}	{}
\.


--
-- Data for Name: chat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.chat (avatar_group, name_group, user_typing, chat_type, chat_id, created_at, chat_status) FROM stdin;
		client	1	191	1664970560428	1
		client	1	192	1664979131929	1
\.


--
-- Data for Name: chat_lines; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.chat_lines (chat_id, message_type, message_text, answer_line, file_type, file_path, file_name, created_at, id, user_id, message_status) FROM stdin;
\.


--
-- Data for Name: user_chat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_chat (chat_id, instance_id, user_id, latest_message) FROM stdin;
191	247	48	1664970560428
192	248	48	1664979131929
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, fire_id, eco_id, nickname, is_connected, last_seen, created_at, bio, deleted_at) FROM stdin;
18	432h4bh32kb4hk3	48	nickname	t	1651262199	1651262199		\N
19	s2Bz9LiSV9gATOG0JHUKTXBrWxa2	49		t	1651500607	1651500607		\N
20	9AcUMUvn4ra4iKS0ZTgxMB68EHy2	50	Vinicius Pacio	t	1651501181	1651501181		0
21	1UmqPwfUNRQMRjGeRwyzpnnBKCG2	51	Vinicius Pacio	t	1651501222	1651501222		0
22	Jj60MEpht3VlN15iyq1W9PdPTTf2	52		f	1652385758	1652385758		0
23	bJWHPO0VMXUH81MCdIfyauTSTmG2	53	Danilo Polaquini	f	1652698139	1652698139		0
24	r3I6vMDvzwUQlLQXBy5qZaILe2x1	54	Gabriel Branco	f	1652783512	1652783512		0
25	UHy01kUuTyakxzHdISnMniGqgO42	55	gabriel branco	f	1652784361	1652784361		0
26	90WBr0AispajYCJ5rsX0Uhqil4i2	56	Fred Munhoz	f	1654517315	1654517315		0
27	G1wcmiK0tnVp74ao0wVkllYMX6i1	57	Vinicius	f	1654520216	1654520216		0
28	5jOIP52wlxVLINT4kLCPU7rUAjL2	58		f	1656938123	1656938123		0
29	tEuLkh4mezf6qzLiHe0VDmZPMue2	59	Vinicius Pacio	f	1662471318	1662471318		0
30	JqSMSgsxf6Y6U21sSk4Wt8N0K7M2	60	Natanael Santos	f	1662474531	1662474531		0
31	oW0hMmiqIygiTFn3URRRn1eBAal1	61	Natanael Santos	f	1662635880	1662635880		0
32	GWtIYjBKZrVKe9HaPFWVvKflIV52	62	Natanael Santos	f	1662641270	1662641270		0
33	1brkj0OTtWVHIXMBtwERCTN4c0p2	63	Daniel Matheus	f	1662641759	1662641759		0
34	0xRKpFPAZZUKazxw4p7lvAyl7ml1	64	Daniel Matheus	f	1662645792	1662645792		0
35	N1TKp9LM3CO2TdJCtcjTTq4MfhA3	65	Daniel Matheus	f	1662719058	1662719058		0
36	pED7EzOKWiXdW58Xgw3fP2PVKrG2	66	Daniel Matheus	f	1662722936	1662722936		0
37	ikHBOcS14OTXtG5tYE84t9ocl6Y2	67	Desenvolvimento	f	1662732388	1662732388		0
38	4VBSGbwPmlYfNOYLdOvfCe5Y5QX2	68	Daniel Matheus	f	1662732957	1662732957		0
39	1leIb5X2QeWbvFyfAkIXk8a6ucy2	69	Francisco Cardoso	f	1663000862	1663000862		0
40	eMgvkn2NjPVAheRYvCJmNreDnwJ3	70	Fernando Almeida	f	1663011037	1663011037		0
41	NeCkK0fsIXbUxXz6JGHuhkyVEc73	71	Nelson Massau	f	1663151480	1663151480		0
42	J13XbhafiaPqWA3lGZ0xFLC4A4s2	72	Daniel Matheus	f	1663156280	1663156280		0
43	ZVqgTJGHmNXkKRanW12K60QxAYw2	73	Pedro Henrique	f	1663172461	1663172461		0
44	JJxrhyWsVwPDAvD7K24ijftTejB3	74	Vinicius Pacio	f	1663244067	1663244067		0
45	nUz6UeNG2yNSXwY7kZnxCzf74mN2	75	Heitor Lima	f	1663359526	1663359526		0
46	njR9CDxjJQarVV0zv8gOs1mc1uE2	76	Ludimila Fragoso	f	1663589140	1663589140		0
47	8X82OHgxU1XyOHEHSwnR6zbWw9v2	77	José Júnior	f	1663678117	1663678117		0
48	ttkWXq8au2MX4jnu9DdYOK1pfek2	78	Vinicius Pacio	f	1663759577	1663759577		0
49	GXQ1StLO2eOVgiU6ydvpOicJPd43	79	Fernando Curti	f	1663953249	1663953249		0
50	enV8LQ0FkUNq2MDjN0x5mIyJac62	80	Michaelli Ferelli	f	1663954422	1663954422		0
51	cVl2nwfaIcgJuwI9A149JPOCksR2	81	Mateus de Oliveira	f	1663961046	1663961046		0
52	nZlE5JGrLHM4ngE28q2jl0DkreV2	82	Brenda Souza	f	1664280053	1664280053		0
53	okCxHcwvKQUGhP43mrWPXb92eqk2	83	Carla França	f	1664814295	1664814295		0
54	j8n0JQ7PP5UE5PPmDeD1OEdTs513	84	Vitor Guilherme	f	1664992928	1664992928		0
55	Fv8o5WlJbVVWSMdQQsn3ZYqo3Gl2	85	Leonardo Santos	f	1665418649	1665418649		0
56	Rk3TLDXALqXzCeIElNCYck9p74D2	86	Adriano Barbosa	f	1666964853	1666964853		0
57	3YtW0L60kEP1LIE5bjESuQo2tpm2	87	Antonio Pedro	f	1666976260	1666976260		0
58	mjthC37rISaUeBJ4kmRhiUDqdL23	88	Jeferson Valdambrini	f	1672858205	1672858205		0
\.


--
-- Name: chat_chat_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.chat_chat_id_seq', 192, true);


--
-- Name: chat_lines_line_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.chat_lines_line_id_seq', 315, true);


--
-- Name: user_chat_instance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.user_chat_instance_id_seq', 248, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 58, true);


--
-- Name: hdb_action_log hdb_action_log_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_action_log
    ADD CONSTRAINT hdb_action_log_pkey PRIMARY KEY (id);


--
-- Name: hdb_cron_event_invocation_logs hdb_cron_event_invocation_logs_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_event_invocation_logs
    ADD CONSTRAINT hdb_cron_event_invocation_logs_pkey PRIMARY KEY (id);


--
-- Name: hdb_cron_events hdb_cron_events_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_events
    ADD CONSTRAINT hdb_cron_events_pkey PRIMARY KEY (id);


--
-- Name: hdb_metadata hdb_metadata_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_metadata
    ADD CONSTRAINT hdb_metadata_pkey PRIMARY KEY (id);


--
-- Name: hdb_metadata hdb_metadata_resource_version_key; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_metadata
    ADD CONSTRAINT hdb_metadata_resource_version_key UNIQUE (resource_version);


--
-- Name: hdb_scheduled_event_invocation_logs hdb_scheduled_event_invocation_logs_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_event_invocation_logs
    ADD CONSTRAINT hdb_scheduled_event_invocation_logs_pkey PRIMARY KEY (id);


--
-- Name: hdb_scheduled_events hdb_scheduled_events_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_events
    ADD CONSTRAINT hdb_scheduled_events_pkey PRIMARY KEY (id);


--
-- Name: hdb_schema_notifications hdb_schema_notifications_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_schema_notifications
    ADD CONSTRAINT hdb_schema_notifications_pkey PRIMARY KEY (id);


--
-- Name: hdb_version hdb_version_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_version
    ADD CONSTRAINT hdb_version_pkey PRIMARY KEY (hasura_uuid);


--
-- Name: chat_lines chat_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_lines
    ADD CONSTRAINT chat_lines_pkey PRIMARY KEY (id);


--
-- Name: chat chat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat
    ADD CONSTRAINT chat_pkey PRIMARY KEY (chat_id);


--
-- Name: users pkey_user_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT pkey_user_id PRIMARY KEY (id);


--
-- Name: users u_fire_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT u_fire_id UNIQUE (fire_id);


--
-- Name: user_chat user_chat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_chat
    ADD CONSTRAINT user_chat_pkey PRIMARY KEY (instance_id);


--
-- Name: hdb_cron_event_invocation_event_id; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_cron_event_invocation_event_id ON hdb_catalog.hdb_cron_event_invocation_logs USING btree (event_id);


--
-- Name: hdb_cron_event_status; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_cron_event_status ON hdb_catalog.hdb_cron_events USING btree (status);


--
-- Name: hdb_cron_events_unique_scheduled; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE UNIQUE INDEX hdb_cron_events_unique_scheduled ON hdb_catalog.hdb_cron_events USING btree (trigger_name, scheduled_time) WHERE (status = 'scheduled'::text);


--
-- Name: hdb_scheduled_event_status; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_scheduled_event_status ON hdb_catalog.hdb_scheduled_events USING btree (status);


--
-- Name: hdb_version_one_row; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE UNIQUE INDEX hdb_version_one_row ON hdb_catalog.hdb_version USING btree (((version IS NOT NULL)));


--
-- Name: fki_fki_chat_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fki_chat_id ON public.user_chat USING btree (chat_id);


--
-- Name: hdb_cron_event_invocation_logs hdb_cron_event_invocation_logs_event_id_fkey; Type: FK CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_event_invocation_logs
    ADD CONSTRAINT hdb_cron_event_invocation_logs_event_id_fkey FOREIGN KEY (event_id) REFERENCES hdb_catalog.hdb_cron_events(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: hdb_scheduled_event_invocation_logs hdb_scheduled_event_invocation_logs_event_id_fkey; Type: FK CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_event_invocation_logs
    ADD CONSTRAINT hdb_scheduled_event_invocation_logs_event_id_fkey FOREIGN KEY (event_id) REFERENCES hdb_catalog.hdb_scheduled_events(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: chat_lines fki_chat_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_lines
    ADD CONSTRAINT fki_chat_id FOREIGN KEY (chat_id) REFERENCES public.chat(chat_id);


--
-- Name: user_chat fki_chat_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_chat
    ADD CONSTRAINT fki_chat_id FOREIGN KEY (chat_id) REFERENCES public.chat(chat_id);


--
-- PostgreSQL database dump complete
--

